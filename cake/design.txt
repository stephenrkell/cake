Goals for the first-iteration design of cake:

Input is an expression whose leaves are object files, and whose branches are operators on those.

Output is a makefile which will build the top-level compound object file.

Support:

unary operators: symbol renaming, symbol unbinding, symbol globalising, symbol weakening

binary operators: Yellin & Strom adaptation

variadic operators: grab-bag linking, explicit wiring
-- perhaps these two can be unified: grab-bag *except* [explicit]
---- note: it's important that we support multiple instantiation
---- it's also essential to support cyclical linkage structures


Other useful things:

support getopts
support named definitions
punt out primitive definitions to separate executables
support checked/unchecked assertions
use GNU development tools
write man page, put on sourceforge....
